import React from "react";
import { BsFacebook, BsInstagram, BsLinkedin } from "react-icons/bs";
import { FaSlack, FaTiktok } from "react-icons/fa";
import { Helmet } from "react-helmet";
import "../../../page/PostStyles.css";
import { FaSquareXTwitter } from "react-icons/fa6";
import CommentsSection from "../../../../Blog/components/CommentsSection";

const ResponsiveDesign: React.FC = () => {
  const currentUrl = window.location.href;
  const postId = 22;

  return (
    <div className="blog-post">
      <Helmet>
        <title>
          Responsive Design: De Principiante a Experta con Media Queries | FemCoders Club
        </title>
        <meta
          name="description"
          content="Gu√≠a completa de responsive design y media queries desde desktop-first hasta mobile-first. Aprende breakpoints, t√©cnicas modernas y mejores pr√°cticas con ejemplos reales."
        />
        <meta
          name="keywords"
          content="responsive design, media queries, mobile-first, desktop-first, breakpoints CSS, dise√±o adaptativo, comunidad femcoders club, desarrollo web responsive, CSS viewport, clamp, container queries"
        />

        {/* Metadatos can√≥nicos */}
        <link
          rel="canonical"
          href="https://www.femcodersclub.com/recursos/css/responsive-design"
        />

        {/* Open Graph para compartir en redes sociales */}
        <meta property="og:type" content="article" />
        <meta
          property="og:title"
          content="Responsive Design: De Principiante a Experta con Media Queries"
        />
        <meta
          property="og:description"
          content="Domina el responsive design desde conceptos b√°sicos hasta t√©cnicas avanzadas. Comparaci√≥n desktop-first vs mobile-first con ejemplos pr√°cticos."
        />
        <meta
          property="og:url"
          content="https://www.femcodersclub.com/recursos/css/responsive-design"
        />
        <meta
          property="og:image"
          content="https://www.femcodersclub.com/public-optimized/desktop/assets/css/ResponsiveDesign.webp"
        />
        <meta property="og:site_name" content="FemCoders Club" />

        {/* Twitter Card */}
        <meta name="twitter:card" content="summary_large_image" />
        <meta
          name="twitter:title"
          content="Responsive Design: De Principiante a Experta"
        />
        <meta
          name="twitter:description"
          content="Aprende responsive design con media queries, mobile-first vs desktop-first, breakpoints y t√©cnicas modernas con ejemplos reales."
        />
        <meta
          name="twitter:image"
          content="https://www.femcodersclub.com/public-optimized/desktop/assets/css/ResponsiveDesign.webp"
        />

        {/* Metadatos de art√≠culo */}
        <meta
          property="article:published_time"
          content="2025-01-04T12:00:00Z"
        />
        <meta property="article:author" content="Irina Ichim" />
        <meta property="article:section" content="Desarrollo Web" />
        <meta property="article:tag" content="CSS" />
        <meta property="article:tag" content="Responsive Design" />
        <meta property="article:tag" content="Media Queries" />
        <meta property="article:tag" content="Mobile-First" />

        {/* Metadatos adicionales */}
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="robots" content="index, follow" />
        <meta name="language" content="Spanish" />
      </Helmet>

      <div className="post-image-container">
        <picture>
          <source
            srcSet="/public-optimized/mobile/assets/css/ResponsiveDesign.webp"
            media="(max-width: 768px)"
          />
          <source
            srcSet="/public-optimized/desktop/assets/css/ResponsiveDesign.webp"
            media="(min-width: 769px)"
          />
          <img
            src="/public-optimized/desktop/assets/css/ResponsiveDesign.webp"
            alt="Responsive Design - Sitio web adapt√°ndose de desktop a tablet y m√≥vil"
            className="blog-post-image"
            loading="lazy"
          />
        </picture>
      </div>

      <h1 className="blog-post-title">
        Responsive Design<br/> De Principiante a Experta
      </h1>

      <div className="social-share">
        <div className="share-buttons">
          <a
            href={`https://www.facebook.com/sharer/sharer.php?u=${currentUrl}`}
            target="_blank"
            rel="noopener noreferrer"
            aria-label="Compartir en Facebook"
          >
            <BsFacebook className="social-icon" />
          </a>
          <a
            href={`https://www.instagram.com/?url=${currentUrl}`}
            target="_blank"
            rel="noopener noreferrer"
            aria-label="Compartir en Instagram"
          >
            <BsInstagram className="social-icon" />
          </a>
          <a
            href={`https://www.linkedin.com/sharing/share-offsite/?url=${currentUrl}`}
            target="_blank"
            rel="noopener noreferrer"
            aria-label="Compartir en LinkedIn"
          >
            <BsLinkedin className="social-icon" />
          </a>
          <a
            href={`https://twitter.com/share?url=${currentUrl}`}
            target="_blank"
            rel="noopener noreferrer"
            aria-label="Compartir este post en Twitter"
          >
            <FaSquareXTwitter className="social-icon" />
          </a>
          <a
            href={`https://www.tiktok.com/share?url=${currentUrl}`}
            target="_blank"
            rel="noopener noreferrer"
            aria-label="Compartir en TikTok"
          >
            <FaTiktok className="social-icon" />
          </a>
          <a
            href="https://communityinviter.com/apps/femcodersclub/femcoders-club"
            target="_blank"
            rel="noopener noreferrer"
            aria-label="Unirse a Slack"
          >
            <FaSlack className="social-icon" />
          </a>
        </div>
      </div>

      <div className="intro-text">
        <p>
          El responsive design es una metodolog√≠a fundamental en el desarrollo web moderno que permite que nuestros sitios se adapten perfectamente a cualquier dispositivo. En este art√≠culo de femCodersClub, exploraremos desde los conceptos b√°sicos hasta las t√©cnicas m√°s avanzadas, con ejemplos visuales de nuestro proyecto ResponsiveShowcase.
        </p>
      </div>
      <div className="highlight-box">
        <h2>¬øQu√© es Responsive Design y por qu√© es crucial?</h2>
        <p>
          El responsive design es una metodolog√≠a de dise√±o web que hace que las p√°ginas se adapten autom√°ticamente a diferentes tama√±os de pantalla y dispositivos. Con m√°s del 60% del tr√°fico web proveniente de dispositivos m√≥viles, es imprescindible que nuestros sitios ofrezcan una experiencia √≥ptima en todos los dispositivos.
        </p>
        <br />
        <h3>Beneficios clave del responsive design:</h3>
        <ul>
          <li><strong>Mejor experiencia de usuario:</strong> Los visitantes pueden navegar c√≥modamente desde cualquier dispositivo</li>
          <li><strong>SEO mejorado:</strong> Google prioriza sitios mobile-friendly en sus resultados</li>
          <li><strong>Mantenimiento eficiente:</strong> Una sola base de c√≥digo para todos los dispositivos</li>
          <li><strong>Mayor alcance:</strong> Accesible para usuarios con diferentes tipos de dispositivos</li>
          <li><strong>Mejor conversi√≥n:</strong> Usuarios satisfechos tienen m√°s probabilidad de completar acciones</li>
        </ul>

        <div className="styled-paragraph" style={{textAlign: "center", marginTop: "2rem"}}>
          <span>
            <a
              href="https://github.com/femcodersclub/ResponsiveShowcase"
              className="highlight underline"
              target="_blank"
              rel="noopener noreferrer"
            >
              üåü Explora nuestro proyecto ResponsiveShowcase en GitHub üìÇ
            </a>
          </span>
          <br />
          <span>
            <a 
              href="https://femcodersclub.github.io/ResponsiveShowcase/"
              target="_blank"
              rel="noopener noreferrer"
            >
              Ver ejemplos en vivo
            </a>
          </span>
        </div>
      </div>

      <div className="highlight-box">
        <h2>üì± Nivel B√°sico: Desktop-First vs Mobile-First</h2>
        <p>
          Existen dos enfoques principales para implementar responsive design. Analicemos cada uno con ejemplos visuales de nuestro proyecto <strong>ResponsiveShowcase. </strong>
        </p>
<br />
        <h3>üñ•Ô∏è Enfoque Desktop-First (Tradicional)</h3>
        <br />
        <p>
          El enfoque desktop-first dise√±a primero para pantallas grandes y luego adapta hacia dispositivos m√°s peque√±os usando media queries con <code>max-width</code>. Observemos c√≥mo femCodersClub implementa este enfoque:
        </p>
        <div className="post-image-container">
          <img
            src="/public-optimized/desktop/assets/css/femcoders-desktop-first.webp"
            alt="femCodersClub adapt√°ndose de desktop a tablet y m√≥vil con enfoque desktop-first"
            className="blog-post-image"
            loading="lazy"
          />
        </div>
        
        <pre className="code-block bg3">
{`/* DESKTOP-FIRST: Empezamos con desktop */
.features-grid {
  grid-template-columns: repeat(3, 1fr); /* 3 columnas */
}

/* Adaptamos hacia m√≥vil con max-width */
@media screen and (max-width: 767px) {
  .features-grid {
    grid-template-columns: 1fr; /* 1 columna en m√≥vil */
  }
}`}
        </pre>

        <h3>üì± Enfoque Mobile-First (Moderno)</h3>
        <p>
          El enfoque mobile-first dise√±a primero para dispositivos m√≥viles y luego mejora progresivamente hacia pantallas m√°s grandes usando media queries con <code>min-width</code>.
        </p>

        <div className="post-image-container">
          <img
            src="/public-optimized/desktop/assets/css/mobile-first-example.webp"
            alt="Ejemplo de dise√±o mobile-first mostrando la progresi√≥n de m√≥vil a desktop"
            className="blog-post-image"
            loading="lazy"
          />
        </div>

        <pre className="code-block bg3">
{`/* MOBILE-FIRST: Empezamos con m√≥vil */
.features-grid {
  flex-direction: column; /* 1 columna por defecto */
}

/* Mejoramos para desktop con min-width */
@media screen and (min-width: 992px) {
  .features-grid {
    grid-template-columns: repeat(3, 1fr); /* 3 columnas */
  }
}`}
        </pre>

       <h3>Comparativa: Desktop-First vs Mobile-First</h3>
        <div className="table-container">
          <table className="framework-comparison-table">
            <thead>
              <tr>
                <th>Aspecto</th>
                <th>üñ•Ô∏è Desktop-First</th>
                <th>üì± Mobile-First</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><strong>Filosof√≠a de Dise√±o</strong></td>
                <td>Dise√±o para desktop, adaptar a m√≥vil</td>
                <td>Dise√±o para m√≥vil, mejorar en desktop</td>
              </tr>
              <tr>
                <td><strong>Media Queries</strong></td>
                <td>max-width (descendente)</td>
                <td>min-width (ascendente)</td>
              </tr>
              <tr>
                <td><strong>Performance M√≥vil</strong></td>
                <td>CSS innecesario cargado</td>
                <td>Solo CSS necesario</td>
              </tr>
              <tr>
                <td><strong>Experiencia M√≥vil</strong></td>
                <td>Adaptaci√≥n, no optimizaci√≥n</td>
                <td>Nativo y optimizado</td>
              </tr>
              <tr>
                <td><strong>SEO M√≥vil</strong></td>
                <td>Penalizaci√≥n por velocidad</td>
                <td>Mejor ranking m√≥vil</td>
              </tr>
              <tr>
                <td><strong>Casos de Uso</strong></td>
                <td>Sitios legacy, aplicaciones desktop</td>
                <td>Nuevos proyectos, sitios p√∫blicos</td>
              </tr>
            </tbody>
          </table>
        </div>

        <div className="performance-tip" style={{
          backgroundColor: "rgba(234, 79, 51, 0.1)",
          padding: "15px",
          borderRadius: "10px",
          marginTop: "20px",
          borderLeft: "4px solid #ea4f33"
        }}>
          <p style={{ margin: "0", fontSize: "1.1rem" }}>
            <strong>üí° Ejemplo real:</strong> femCodersClub utiliza un enfoque desktop-first tradicional, mientras que sitios como Stripe o Linear implementan mobile-first. En nuestro proyecto ResponsiveShowcase puedes comparar ambos enfoques lado a lado.
          </p>
        </div>
      </div>

      <div className="highlight-box">
        <h2>üìè Breakpoints Fundamentales</h2>
        <p>
          Los breakpoints son los puntos espec√≠ficos donde el dise√±o cambia para adaptarse a diferentes tama√±os de pantalla. Nuestro debug panel muestra c√≥mo funcionan en tiempo real.
        </p>

        <pre className="code-block bg3">
{`/* BREAKPOINTS MOBILE-FIRST ESENCIALES */
/* Mobile: 320px+ (estilos base) */

@media screen and (min-width: 768px) {
  /* Tablets */
}

@media screen and (min-width: 992px) {
  /* Desktop */
}`}
        </pre>

        <h3>An√°lisis de breakpoints en frameworks populares:</h3>
        <div className="table-container">
          <table className="framework-comparison-table">
            <thead>
              <tr>
                <th>Framework</th>
                <th>Small</th>
                <th>Medium</th>
                <th>Large</th>
                <th>Extra Large</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><strong>Bootstrap 5</strong></td>
                <td>‚â•576px</td>
                <td>‚â•768px</td>
                <td>‚â•992px</td>
                <td>‚â•1200px</td>
              </tr>
              <tr>
                <td><strong>Tailwind CSS</strong></td>
                <td>‚â•640px</td>
                <td>‚â•768px</td>
                <td>‚â•1024px</td>
                <td>‚â•1280px</td>
              </tr>
              <tr>
                <td><strong>ResponsiveShowcase</strong></td>
                <td>‚â•481px</td>
                <td>‚â•768px</td>
                <td>‚â•992px</td>
                <td>‚â•1200px</td>
              </tr>
            </tbody>
          </table>
        </div>

        <div className="post-image-container">
          <img
            src="/public-optimized/desktop/assets/css/devtools-breakpoints.webp"
            alt="Chrome DevTools mostrando diferentes breakpoints en acci√≥n"
            className="blog-post-image"
            loading="lazy"
          />
          <p className="image-caption">Chrome DevTools: testing de breakpoints</p>
        </div>
      </div>

     <div className="highlight-box">
        <h2>üèóÔ∏è Nivel Intermedio: Layouts Flexibles</h2>
        
        <h3>Grid Adaptativo Inteligente</h3>
        <p>
          Una de las t√©cnicas m√°s poderosas en responsive design es crear grids que se adapten autom√°ticamente seg√∫n el espacio disponible. Observa c√≥mo nuestro proyecto ResponsiveShowcase implementa esta t√©cnica:
        </p>

        <pre className="code-block bg3">
{`/* GRID QUE SE ADAPTA AUTOM√ÅTICAMENTE */
.examples-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  gap: var(--spacing);
}

/* Ventajas de auto-fit + minmax():
   - Se adapta fluidamente al espacio disponible
   - Mantiene tama√±o m√≠nimo legible (400px)
   - No hay breakpoints r√≠gidos */`}
        </pre>

        <div className="performance-tip" style={{
          backgroundColor: "rgba(71, 55, 187, 0.1)",
          padding: "15px",
          borderRadius: "10px",
          marginTop: "20px",
          borderLeft: "4px solid #4737bb"
        }}>
          <p style={{ margin: "0", fontSize: "1.1rem" }}>
            <strong>üí° ¬øQuieres dominar CSS Grid?</strong> Consulta nuestro art√≠culo completo: <a href="/recursos/css/css-grid" className="highlight underline">CSS Grid: Domina el sistema de cuadr√≠culas en tu p√°gina web</a>
          </p>
        </div>
 <br />
        <h3>Navegaci√≥n Responsive: Horizontal ‚Üí Hamburguesa</h3>
       
        <p>
          La navegaci√≥n es cr√≠tica en responsive design. Mira c√≥mo evoluciona nuestra navegaci√≥n de horizontal en desktop a men√∫ hamburguesa en m√≥vil:
        </p>

        <div className="post-image-container">
          <img
            src="/assets/css/navigation-evolution.gif"
            alt="Navegaci√≥n cambiando de horizontal en desktop a hamburger en m√≥vil"
            className="blog-post-image"
            loading="lazy"
          />
         
        </div>
<br />
        <h3>Layouts Flexibles con Flexbox</h3>
        <p>
          Flexbox es fundamental para crear componentes responsive que se adapten fluidamente. Es especialmente √∫til para navegaciones, barras de herramientas y layouts de una dimensi√≥n.
        </p>

        <div className="performance-tip" style={{
          backgroundColor: "rgba(234, 79, 51, 0.1)",
          padding: "15px",
          borderRadius: "10px",
          marginTop: "20px",
          borderLeft: "4px solid #ea4f33"
        }}>
          <p style={{ margin: "0", fontSize: "1.1rem" }}>
            <strong>üöÄ Profundiza en Flexbox:</strong> Lee nuestro art√≠culo detallado <a href="/recursos/css/flexbox" className="highlight underline">Flexbox: El poder de crear layouts flexibles</a> para dominar los layouts unidimensionales.
          </p>
        </div>
 <br />
        <h3>Combinando Grid y Flexbox para Layouts Perfectos</h3>
        <p>
          La verdadera magia del responsive design moderno ocurre cuando combinas CSS Grid para el layout principal con Flexbox para los componentes internos. Esta estrategia h√≠brida te da lo mejor de ambos mundos.
        </p>

        <div className="performance-tip" style={{
          backgroundColor: "rgba(130, 26, 212, 0.1)",
          padding: "15px",
          borderRadius: "10px",
          marginTop: "20px",
          borderLeft: "4px solid #821ad4"
        }}>
          <p style={{ margin: "0", fontSize: "1.1rem" }}>
            <strong>‚ö° Estrategias avanzadas:</strong> Descubre c√≥mo combinar ambas t√©cnicas en nuestro art√≠culo <a href="/recursos/css/css-grid-flexbox" className="highlight underline">Estrategias avanzadas: Combinando Grid y Flexbox en CSS</a>
          </p>
        </div>
 <br />
        <h3>Im√°genes Responsivas en Acci√≥n</h3>
        <p>
          Las im√°genes responsivas van m√°s all√° del simple <code>max-width: 100%</code>. Incluyen t√©cnicas como <code>aspect-ratio</code>, <code>object-fit</code> y carga condicional seg√∫n el dispositivo:
        </p>
        
        <div className="post-image-container">
          <img
            src="/public-optimized/desktop/assets/css/responsive-images.webp"
            alt="Im√°genes adapt√°ndose con diferentes aspect ratios seg√∫n el dispositivo"
            className="blog-post-image"
            loading="lazy"
          />
          <p className="image-caption">Im√°genes responsivas: escalado inteligente vs recorte controlado</p>
        </div>
      </div>

      <div className="highlight-box">
        <h2>üöÄ Nivel Avanzado: T√©cnicas Modernas</h2>
        
        <h3>Container Queries: La Evoluci√≥n de las Media Queries</h3>
      <p>
  En nuestro proyecto <span><a href="https://femcodersclub.github.io/ResponsiveShowcase/" target="_blank" rel="noopener">ResponsiveShowcase</a></span> se puede observar c√≥mo las <strong>container queries</strong> representan el futuro del responsive design. Los componentes se adaptan a <em>su contenedor</em>, no al viewport.
</p>


        <pre className="code-block bg3">
{`/* CONTAINER QUERIES: El componente se adapta a SU contenedor */
.card-container {
  container-type: inline-size;
}

@container (min-width: 350px) {
  .card {
    display: flex; /* Cambia cuando el contenedor es ‚â•350px */
    gap: 1rem;
  }
}`}
        </pre>

        <h3>Tipograf√≠a Fluida con clamp()</h3>
      <p>
  Con <span><a href="https://github.com/femcodersclub/ResponsiveShowcase/blob/main/styles.css#L41" target="_blank" rel="noopener">ResponsiveShowcase</a> </span> puedes observar c√≥mo el texto escala fluidamente sin necesidad de breakpoints gracias a <code>clamp()</code>.
</p>



        <pre className="code-block bg3">
{`/* TIPOGRAF√çA QUE ESCALA AUTOM√ÅTICAMENTE */
.hero-title {
  font-size: clamp(1.8rem, 4.5vw, 3.5rem);
  /* M√≠nimo: 1.8rem, M√°ximo: 3.5rem, Preferido: 4.5vw */
}

/* Sin clamp() necesitar√≠as m√∫ltiples media queries */`}
        </pre>
      </div>

      <div className="highlight-box">
        <h2>üîß Herramientas de Desarrollo y Debugging</h2>
        
     <h3>Debug Panel en Tiempo Real</h3>
     <br/>
<p>
  El proyecto incluye un <strong>debug panel</strong> que muestra informaci√≥n √∫til como el tama√±o del viewport, el breakpoint activo, el tipo de dispositivo y la orientaci√≥n.  
  Puedes ver c√≥mo est√° implementado en el siguiente fragmento de c√≥digo: 
 <strong> <a href="https://github.com/femcodersclub/ResponsiveShowcase/blob/main/styles.css#L170" target="_blank" rel="noopener">
    Ver implementaci√≥n del Debug Panel en GitHub
  </a></strong>
</p>
  <br/>
<h3>Chrome DevTools para Responsive Design</h3>
  <br/>
<p>
  Chrome DevTools es una herramienta imprescindible para testear y depurar dise√±o responsive.  
  Permite simular distintos dispositivos, tama√±os de pantalla, resoluciones y orientaciones,  
  todo en tiempo real y sin necesidad de usar un m√≥vil f√≠sico.  
  Adem√°s, puedes inspeccionar c√≥mo se comportan tus media queries, container queries y layouts  
  en diferentes condiciones, lo que acelera el proceso de dise√±o y validaci√≥n.
</p>


        <h3>Herramientas Recomendadas</h3>
        <div className="tools-container">
          <div className="recurso-item">
            <h5 className="tool-title">Responsively App</h5>
            <p>Visualiza m√∫ltiples dispositivos simult√°neamente</p>
            <a href="https://responsively.app/" target="_blank" rel="noopener noreferrer">Descargar</a>
          </div>
          
          <div className="recurso-item">
            <h5 className="tool-title">Chrome DevTools</h5>
            <p>Device Mode (Ctrl+Shift+M) para simular dispositivos</p>
          </div>

          <div className="recurso-item">
            <h5 className="tool-title">Firefox DevTools</h5>
            <p>Excelente Responsive Design Mode</p>
          </div>
        </div>
      </div>

      <div className="highlight-box">
        <h2>‚ö° Performance y Optimizaci√≥n</h2>
        <h3>Testing de Performance Responsive</h3>
        <br />
<p>
 <strong> <a href="https://developer.chrome.com/docs/lighthouse/overview/" target="_blank" rel="noopener">Lighthouse</a> </strong>es una herramienta integrada en Chrome que permite auditar el rendimiento, la accesibilidad y las buenas pr√°cticas de tu sitio web, especialmente en dispositivos m√≥viles.  <br />
  Es muy √∫til para detectar problemas como im√°genes pesadas, tiempos de carga lentos, falta de adaptabilidad o malas pr√°cticas en CSS y JavaScript.  <br />
  Al usar Lighthouse, puedes optimizar tu dise√±o responsive asegurando una experiencia r√°pida y eficiente en cualquier dispositivo.
</p>
  <br />


        <h3>Consejos para mejor performance en m√≥viles</h3>
          <br />
        <ul>
          <li><strong>Optimizar im√°genes:</strong> Usar formatos modernos (WebP, AVIF) y tama√±os apropiados</li>
          <li><strong>Critical CSS:</strong> Cargar solo el CSS necesario para el viewport inicial</li>
          <li><strong>Lazy loading:</strong> Cargar im√°genes solo cuando sean necesarias</li>
          <li><strong>Reduce HTTP requests:</strong> Combinar archivos CSS cuando sea posible</li>
          <li><strong>Respetar preferencias de usuario:</strong> <code>prefers-reduced-motion</code></li>
        </ul>

        <pre className="code-block bg3">
{`/* RESPETO POR PREFERENCIAS DE ACCESIBILIDAD */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    transition-duration: 0.01ms !important;
  }
}`}
        </pre>
      </div>

      <div className="highlight-box">
        <h2>üåç Casos Reales y Mejores Pr√°cticas</h2>
        
        <h3>An√°lisis: femCodersClub vs Sitios Mobile-First</h3>

        <div className="table-container">
          <table className="framework-comparison-table">
            <thead>
              <tr>
                <th>Sitio Web</th>
                <th>Enfoque</th>
                <th>Caracter√≠sticas</th>
                <th>Performance M√≥vil</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><strong>femCodersClub</strong></td>
                <td>Desktop-First</td>
                <td>Navegaci√≥n horizontal ‚Üí hamburger<br/>Grid que se colapsa</td>
                <td>Buena con optimizaciones</td>
              </tr>
              <tr>
                <td><strong>Stripe</strong></td>
                <td>Mobile-First</td>
                <td>Dise√±o progresivo<br/>Componentes modulares</td>
                <td>Excelente</td>
              </tr>
              <tr>
                <td><strong>Linear</strong></td>
                <td>Mobile-First</td>
                <td>Tipograf√≠a fluida<br/>Container queries</td>
                <td>Excelente</td>
              </tr>
            </tbody>
          </table>
        </div>

        <h3>Checklist para responsive design perfecto</h3>
        <ul>
          <li>‚úÖ <strong>Viewport meta tag:</strong> <code>&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</code></li>
          <li>‚úÖ <strong>Im√°genes flexible:</strong> Usar <code>max-width: 100%</code> como m√≠nimo</li>
          <li>‚úÖ <strong>Texto legible:</strong> Minimum 16px font-size en m√≥vil</li>
          <li>‚úÖ <strong>√Åreas t√°ctiles:</strong> Minimum 44px para botones y enlaces</li>
          <li>‚úÖ <strong>Testing real:</strong> Probar en dispositivos f√≠sicos</li>
          <li>‚úÖ <strong>Performance:</strong> Optimizar para conexiones lentas</li>
          <li>‚úÖ <strong>Accesibilidad:</strong> Considerar lectores de pantalla</li>
        </ul>
      </div>

      <div className="highlight-box">
        <h2>üöÄ Proyecto ResponsiveShowcase: Tu Laboratorio de Aprendizaje</h2>
        <p>
          Hemos creado un proyecto completo que implementa todas las t√©cnicas que hemos cubierto en este art√≠culo. Es tu laboratorio personal para experimentar y aprender.
        </p>

        <div className="post-image-container">
          <img
            src="/public-optimized/desktop/assets/css/responsiveshowcase-overview.webp"
            alt="Vista general del proyecto ResponsiveShowcase con todas sus caracter√≠sticas"
            className="blog-post-image"
            loading="lazy"
          />
        </div>
<br />
        <h3>¬øQu√© encontrar√°s en el proyecto?</h3>
        <br />
        <ul>
          <li><strong>Comparaci√≥n Desktop-First vs Mobile-First:</strong> Dos versiones del mismo dise√±o</li>
          <li><strong>Debug panel interactivo:</strong> Informaci√≥n en tiempo real sobre breakpoints</li>
          <li><strong>Ejemplos de Grid adaptativo:</strong> De 4 ‚Üí 2 ‚Üí 1 columna</li>
          <li><strong>Navegaci√≥n responsive:</strong> Horizontal ‚Üí hamburger</li>
          <li><strong>Tipograf√≠a fluida:</strong> Implementaci√≥n con clamp()</li>
          <li><strong>Container queries:</strong> Ejemplos funcionando</li>
          <li><strong>Documentaci√≥n completa:</strong> README con explicaciones detalladas</li>
        </ul>
<br />
        <h3>C√≥mo usar el proyecto para aprender</h3>
        <br />
        <ol>
          <li><strong>Clona el repositorio:</strong> <code>git clone https://github.com/femcodersclub/ResponsiveShowcase.git</code></li>
          <li><strong>Abre index.html:</strong> Explora los diferentes ejemplos</li>
          <li><strong>Examina el c√≥digo:</strong> styles.css y main.js contienen todas las t√©cnicas</li>
          <li><strong>Experimenta:</strong> Modifica valores y observa los cambios</li>
          <li><strong>Toma capturas:</strong> Usa el proyecto para tus propios art√≠culos o presentaciones</li>
        </ol>

        <div style={{
          backgroundColor: "rgba(130, 26, 212, 0.1)", 
          padding: "20px", 
          borderRadius: "10px", 
          textAlign: "center", 
          margin: "30px 0",
          borderLeft: "5px solid #821ad4",
          boxShadow: "0 4px 8px rgba(0, 0, 0, 0.1)"
        }}>
          <h3 style={{color: "#821ad4", marginTop: 0, fontSize: "1.8rem"}}>üåü ¬°Contribuye al proyecto! üíú</h3>
          <p style={{fontSize: "18px", marginBottom: "15px", color: "#6d2c95"}}>
            ¬øTienes ideas para mejorar ResponsiveShowcase? ¬°Nos encantar√≠a recibir tu <strong>Pull Request</strong>!
          </p>
          <a 
            href="https://github.com/femcodersclub/ResponsiveShowcase/pulls"
            target="_blank"
            rel="noopener noreferrer"
            style={{
              display: "inline-block",
              backgroundColor: "#821ad4",
              color: "white",
              padding: "12px 24px",
              borderRadius: "8px",
              textDecoration: "none",
              fontWeight: "bold",
              fontSize: "16px",
              transition: "all 0.3s ease"
            }}
          >
            üöÄ Hacer Pull Request
          </a>
        </div>
      </div>

      <div className="highlight-box">
        <h2>üéØ T√©cnicas Avanzadas para 2025</h2>
        
        <h3>CSS Moderno para Responsive Design</h3>
      
          <p className="image-caption">CSS moderno: aspect-ratio, logical properties, funciones avanzadas</p>

        <pre className="code-block bg3">
{`/* CSS MODERNO PARA RESPONSIVE DESIGN */

/* 1. Tipograf√≠a y espaciado fluido */
.responsive-spacing {
  margin: clamp(1rem, 4vw, 3rem);
  padding: max(1rem, 2vw);
}

/* 2. Aspect ratio nativo */
.video-container {
  aspect-ratio: 16/9;
  width: 100%;
}

/* 3. Logical properties para mejor internacionalizaci√≥n */
.content {
  margin-inline: auto;
  padding-block: 2rem;
  border-inline-start: 4px solid #ea4f33;
}`}
        </pre>

        <h3>Tendencias emergentes</h3>
        <ul>
          <li><strong>Intrinsic Web Design:</strong> Layouts que se adaptan al contenido naturalmente</li>
          <li><strong>Component-Driven Design:</strong> Componentes que son responsive por defecto</li>
          <li><strong>Progressive Enhancement:</strong> Mejoras graduales seg√∫n capacidades del dispositivo</li>
          <li><strong>Contextual Design:</strong> Adaptaci√≥n seg√∫n contexto de uso, no solo tama√±o</li>
        </ul>
      </div>

      <div className="highlight-box">
        <h2>üìö Recursos Adicionales para Seguir Aprendizando</h2>
        
        <h3>Documentaci√≥n oficial y gu√≠as</h3>
        <div className="tools-container">
          <div className="recurso-item">
            <h5 className="tool-title">MDN Web Docs</h5>
            <p>Documentaci√≥n completa sobre media queries y responsive design</p>
            <a href="https://developer.mozilla.org/docs/Web/CSS/Media_Queries" target="_blank" rel="noopener noreferrer">Explorar</a>
          </div>
          
          <div className="recurso-item">
            <h5 className="tool-title">Web.dev</h5>
            <p>Gu√≠as modernas de Google sobre responsive web design</p>
            <a href="https://web.dev/responsive-web-design-basics/" target="_blank" rel="noopener noreferrer">Leer</a>
          </div>

          <div className="recurso-item">
            <h5 className="tool-title">CSS-Tricks</h5>
            <p>Art√≠culos detallados sobre t√©cnicas CSS responsive</p>
            <a href="https://css-tricks.com/guides/" target="_blank" rel="noopener noreferrer">Explorar</a>
          </div>
        </div>

        <h3>Herramientas para generar c√≥digo</h3>
        <ul>
          <li><strong><a href="https://fluid-typography.netlify.app/" target="_blank" rel="noopener noreferrer">Fluid Type Calculator</a>:</strong> Genera funciones clamp() autom√°ticamente</li>
          <li><strong><a href="https://grid.layoutit.com/" target="_blank" rel="noopener noreferrer">CSS Grid Generator</a>:</strong> Crea layouts Grid visualmente</li>
          <li><strong><a href="https://cssgridgarden.com/" target="_blank" rel="noopener noreferrer">Grid Garden</a>:</strong> Aprende Grid jugando</li>
          <li><strong><a href="https://flexboxfroggy.com/" target="_blank" rel="noopener noreferrer">Flexbox Froggy</a>:</strong> Aprende Flexbox de forma divertida</li>
        </ul>

        <h3>Comunidades y recursos de femCodersClub</h3>
        <ul>
          <li><strong><a href="https://communityinviter.com/apps/femcodersclub/femcoders-club" target="_blank" rel="noopener noreferrer">Slack de femCodersClub</a>:</strong> √önete a nuestra comunidad</li>
          <li><strong><a href="https://femcodersclub.com/blog" target="_blank" rel="noopener noreferrer">Blog femCodersClub</a>:</strong> M√°s art√≠culos t√©cnicos</li>
          <li><strong><a href="https://github.com/femcodersclub" target="_blank" rel="noopener noreferrer">GitHub femCodersClub</a>:</strong> Proyectos open source</li>
        </ul>
      </div>

      <div className="highlight-box">
        <h2>üéØ Conclusi√≥n</h2>
        <p>
          El responsive design ha evolucionado de una "buena pr√°ctica" a una necesidad absoluta en el desarrollo web moderno. Desde los conceptos b√°sicos de media queries hasta las t√©cnicas m√°s avanzadas como container queries y tipograf√≠a fluida, dominar estas habilidades te convertir√° en una desarrolladora frontend m√°s competente y vers√°til.
        </p>

        <p>
          A lo largo de este art√≠culo hemos explorado:
        </p>
        <br />
        <ul>
          <li>‚úÖ <strong>Los fundamentos</strong> del responsive design y por qu√© es crucial</li>
          <li>‚úÖ <strong>La comparaci√≥n pr√°ctica</strong> entre desktop-first y mobile-first</li>
          <li>‚úÖ <strong>Breakpoints estrat√©gicos</strong> y c√≥mo elegirlos</li>
          <li>‚úÖ <strong>T√©cnicas intermedias</strong> para layouts flexibles</li>
          <li>‚úÖ <strong>T√©cnicas avanzadas</strong> con CSS moderno</li>
          <li>‚úÖ <strong>Herramientas de debugging</strong> y optimizaci√≥n</li>
          <li>‚úÖ <strong>Ejemplos visuales reales</strong> con nuestro proyecto ResponsiveShowcase</li>
        </ul>

        <p>
          El proyecto ResponsiveShowcase est√° dise√±ado para ser tu compa√±ero de aprendizaje. √ösalo para experimentar, tomar capturas para tus propios proyectos, y como referencia cuando implementes responsive design en sitios reales.
        </p>

        <div className="performance-tip" style={{
          backgroundColor: "rgba(234, 79, 51, 0.1)",
          padding: "20px",
          borderRadius: "10px",
          marginTop: "20px",
          borderLeft: "4px solid #ea4f33"
        }}>
          <p style={{ margin: "0", fontSize: "1.1rem" }}>
            <strong>üí° Recuerda:</strong> El responsive design no es solo sobre hacer que las cosas "se vean bien" en m√≥vil. Es sobre crear experiencias optimizadas y accesibles para cada contexto de uso. Cada decisi√≥n de dise√±o debe considerar no solo el tama√±o de pantalla, sino tambi√©n la velocidad de conexi√≥n, el m√©todo de input, y las necesidades del usuario.
          </p>
        </div>
<br />
        <h3>¬øCu√°l es tu pr√≥ximo paso?</h3>
        <br />
        <ol>
          <li><strong>Practica con el proyecto:</strong> Clona ResponsiveShowcase y experimenta</li>
          <li><strong>Aplica en proyectos reales:</strong> Implementa mobile-first en tu pr√≥ximo desarrollo</li>
          <li><strong>Comparte con la comunidad:</strong> Sube tus experimentos a GitHub</li>
          <li><strong>Mantente actualizada:</strong> Las especificaciones CSS evolucionan constantemente</li>
        </ol>

        <p>
          ¬°La comunidad femCodersClub est√° aqu√≠ para apoyarte en tu camino! No dudes en compartir tus proyectos, hacer preguntas, o contribuir con nuevos ejemplos al repositorio.
        </p>
      </div>

      <div className="author-info">
        <p>
          Escrito por: <strong>Irina Ichim</strong>
        </p>
        <p>Co-fundadora de femCoders Club</p>
        <p>
          Fecha de publicaci√≥n:{" "}
          <strong>4 de enero, 2025</strong>
        </p>
      </div>

      <div className="back-to-blog-container">
        <a href="/blog" className="back-to-blog">
          Volver al Blog
        </a>
      </div>

      <CommentsSection postId={postId} />
    </div>
  );
};

export default ResponsiveDesign;